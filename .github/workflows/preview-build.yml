name: Preview Build

on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'Pull Request number to build preview for'
        required: true
        type: number
      npm_tag:
        description: 'NPM tag for preview (default: preview)'
        required: false
        type: string

permissions:
  contents: read
  packages: write
  pull-requests: write

jobs:
  preview:
    runs-on: ubuntu-latest
    steps:
      - name: Check PR state
        if: ${{ !env.ACT }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_STATE=$(gh pr view ${{ inputs.pr_number }} --json state --jq .state)
          if [[ "$PR_STATE" != "OPEN" ]]; then
            echo "❌ Error: PR #${{ inputs.pr_number }} is not open (state: $PR_STATE)"
            exit 1
          fi
          echo "✅ PR #${{ inputs.pr_number }} is open and ready for preview build"

      - name: Checkout PR
        uses: actions/checkout@v4
        with:
          ref: ${{ env.ACT && github.ref || format('refs/pull/{0}/head', inputs.pr_number) }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org/'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run checks
        run: |
          echo "🔍 Running quality checks..."
          pnpm run type-check || echo "Type check failed but continuing..."
          pnpm run lint || echo "Lint check failed but continuing..."

      - name: Build
        run: pnpm run build

      # TODO: Too many tests are failing from a preview state already
      #       so we're skipping them for now
      # - name: Run unit tests
      #   run: pnpm test -- --testPathIgnorePatterns=integration

      - name: Create preview version
        id: preview
        run: |
          BASE_VERSION=$(node -p "require('./package.json').version")
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          SHORT_SHA=$(git rev-parse --short HEAD)
          PR_NUMBER="${{ inputs.pr_number }}"
          PREVIEW_VERSION="${BASE_VERSION}-preview.pr${PR_NUMBER}.${TIMESTAMP}.${SHORT_SHA}"
          pnpm version $PREVIEW_VERSION --no-git-tag-version
          echo "version=$PREVIEW_VERSION" >> $GITHUB_OUTPUT
          
          # Always use 'preview' tag unless explicitly specified
          if [ -n "${{ inputs.npm_tag }}" ]; then
            NPM_TAG="${{ inputs.npm_tag }}"
          else
            NPM_TAG="preview"
          fi
          echo "npm_tag=$NPM_TAG" >> $GITHUB_OUTPUT
      - name: Publish preview
        run: ${{ env.ACT && './scripts/mock-publish.sh' || 'pnpm publish' }} --access public --tag ${{ steps.preview.outputs.npm_tag }} --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create and push git tag
        if: ${{ !env.ACT }}
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag "preview/pr-${{ inputs.pr_number }}"
          git push origin "preview/pr-${{ inputs.pr_number }}" --force

      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            const comment = `## 📦 Preview Package Published!
            
            **Version:** \`${{ steps.preview.outputs.version }}\`
            **NPM Tag:** \`${{ steps.preview.outputs.npm_tag }}\`
            **Git Tag:** \`preview/pr-${{ inputs.pr_number }}\`
            
            ### Installation
            \`\`\`bash
            npm install @trufnetwork/kwil-js@${{ steps.preview.outputs.npm_tag }}
            # or
            npm install @trufnetwork/kwil-js@${{ steps.preview.outputs.version }}
            \`\`\`
            
            **Built from:** ${{ github.sha }}
            **Triggered by:** @${{ github.actor }}
            `;
            
            await github.rest.issues.createComment({
              issue_number: ${{ inputs.pr_number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
        if: ${{ !env.ACT }}